apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.example.desafio_android_samuel_ramos"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.example.desafio_android_samuel_ramos.app.CustomInstrumentationRunner"
//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def marvelApiKey = properties.getProperty("apikey", "")
        def hashKey = properties.getProperty("hash", "")
        def ts = properties.getProperty("ts", "")

        debug {
            buildConfigField 'String', "MARVEL_API_KEY", marvelApiKey
            resValue 'string', "apikey", marvelApiKey

            buildConfigField 'String', "HASH_KEY", hashKey
            resValue 'string', "hash", hashKey

            buildConfigField 'String', "TS", ts
            resValue 'string', "ts", ts
        }
        release {
            buildConfigField 'String', "MARVEL_API_KEY", marvelApiKey
            resValue 'string', "apikey", marvelApiKey

            buildConfigField 'String', "HASH_KEY", hashKey
            resValue 'string', "hash", hashKey

            buildConfigField 'String', "TS", ts
            resValue 'string', "ts", ts

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    viewBinding {
        enabled = true
    }

    dataBinding {
        enabled true
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    def moshiVersion = "1.8.0"
    def glideVersion = '4.11.0'
    def navigationVersion = '2.3.0-beta01'
    def retrofit2_version = "2.6.0"
    def okhttp3_version = "3.12.0"
    def kotlinCoroutineVersion = "1.0.1"
    def materialDesign = "1.2.0-beta01"
    def liveData = "2.2.0"

    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.0'

    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"

    //Material Design
    implementation "com.google.android.material:material:$materialDesign"

    //LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$liveData"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$navigationVersion"

    //Koin
    def koin_version = '2.0.1'
    implementation "org.koin:koin-android:$koin_version"

    def roomVersion = '2.2.5'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

//    def mockitoVersion = '3.0.0'
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
//    testImplementation "org.mockito:mockito-inline:$mockitoVersion"

    def mockk_version = '1.9.3'
    def mockwebserver_version = '4.1.0'
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "org.koin:koin-test:$koin_version"

    def espresso_contrib = '3.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "org.koin:koin-test:$koin_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_contrib"

    def testx_rules = '1.3.0-rc01'
    def android_arch_core_testing = '1.1.1'
    androidTestImplementation "androidx.test:rules:$testx_rules"
    androidTestImplementation "android.arch.core:core-testing:$android_arch_core_testing"

    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    androidTestImplementation "org.koin:koin-test:$koin_version"

}
